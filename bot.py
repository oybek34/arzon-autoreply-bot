import os
import asyncio
import pytz
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
from flask import Flask

# –§–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã Render –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª –ø—Ä–æ—Ü–µ—Å—Å
app_web = Flask(__name__)

@app_web.route('/')
def home():
    return "Bot is running ‚úÖ"

# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞
def run_web():
    app_web.run(host="0.0.0.0", port=10000)

# Telegram —Ç–æ–∫–µ–Ω
TOKEN = os.getenv("TOKEN")

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¢–∞—à–∫–µ–Ω—Ç
tz = pytz.timezone("Asia/Tashkent")

async def auto_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    now = datetime.now(tz)
    hour = now.hour

    if 10 <= hour < 21:
        reply_text = (
            "üëã Assalomu Aleykum Hurmatli mijoz üòä, "
            "Siz Arzon.Gadjet ga murojaat qildingiz, sizga tez orada javob beramiz üí¨\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ üòä\n"
            "–ú—ã —Å–µ–π—á–∞—Å –Ω–∞ —Å–≤—è–∑–∏ –∏ –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üí¨"
        )
    else:
        reply_text = (
            "üëã Assalomu Aleykum Hurmatli mijoz üòä, "
            "Siz Arzon.Gadjet ga murojaat qildingiz, Afsus bizning ish vaqtimiz tugadi üòÆ‚Äçüí®,\n"
            "‚è∞ Soat 10:00 dan 21:00 gacha aloqadamiz. Agar savolingiz bo'lsa qoldiring biz albatta javob beramiz üòä\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "üåô –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä!\n"
            "–ù–∞—à –≥—Ä–∞—Ñ–∏–∫: —Å 10:00 –¥–æ 21:00 üïô\n"
            "–°–µ–π—á–∞—Å –º—ã —É–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º —É—Ç—Ä–æ–º üí¨"
        )

    await update.message.reply_text(reply_text)

async def run_bot():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, auto_reply))
    print("ü§ñ Bot started successfully!")
    await app.run_polling()

if __name__ == "__main__":
    import threading
    threading.Thread(target=run_web).start()
    asyncio.run(run_bot())
